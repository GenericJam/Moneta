# Test OHLC Data

```elixir
Mix.install([
  {:jason, "~> 1.4"},
  {:req, "~> 0.3.10"},
  {:decimal, "~> 2.1"},
  {:timex, "~> 3.7"}
])
```

## What this is for

This Livebook is for testing the coding assignment. If you run them in order it will work best as they don't conflict. Feel free to write your own testing code here.

The project needs to already be running for this to work.

## You can run this as a one off to see what it does

```elixir
record = %{
  "timestamp" => "2021-09-01T11:00:00Z",
  "open" => 16.83,
  "high" => 19.13,
  "low" => 15.49,
  "close" => 16.3
}

Req.post!("http://localhost:4000/api/insert", json: record)
```

## Test last 2 days

```elixir
now = Timex.now()

yesterday = Timex.shift(now, days: -1)

records =
  for i <- 0..1500 do
    %{
      close: 1.0 + i,
      high: 42.0,
      low: 42.0,
      open: 42.0,
      timestamp: Timex.shift(yesterday, minutes: 0 - i, seconds: -2)
    }
  end

records
|> Enum.each(fn record ->
  Req.post!("http://localhost:4000/api/insert", json: record)
end)

%Req.Response{
  status: 200,
  body: %{"data" => %{"average" => 720.0}}
} = Req.get!("http://localhost:4000/api/average/?window=last_2_days")
```

## Test last 22 hours

```elixir
now = Timex.now()

twelve_hours_ago = Timex.shift(now, hours: -12)

records =
  for i <- 0..800 do
    %{
      close: 1.0 + i,
      high: 42.0,
      low: 42.0,
      open: 42.0,
      timestamp: Timex.shift(twelve_hours_ago, minutes: 0 - i, seconds: -2)
    }
  end

records
|> Enum.each(fn record ->
  Req.post!("http://localhost:4000/api/insert", json: record)
end)

%Req.Response{
  status: 200,
  body: %{"data" => %{"average" => 300.5}}
} = Req.get!("http://localhost:4000/api/average/?window=last_22_hours")
```

## Last 1 hour / 60 minutes

```elixir
now = Timex.now()

records =
  for i <- 0..80 do
    %{
      close: 1.0 + i,
      high: 42.0,
      low: 42.0,
      open: 42.0,
      timestamp: Timex.shift(now, minutes: 0 - i, seconds: -2)
    }
  end

records
|> Enum.each(fn record ->
  Req.post!("http://localhost:4000/api/insert", json: record)
end)

%Req.Response{
  status: 200,
  body: %{"data" => %{"average" => 30.5}}
} = Req.get!("http://localhost:4000/api/average/?window=last_1_hour")

%Req.Response{
  status: 200,
  body: %{"data" => %{"average" => 30.5}}
} = Req.get!("http://localhost:4000/api/average/?window=last_60_minutes")
```

## Last 10 items

```elixir
records =
  for i <- 0..20 do
    %{
      close: 1.0 + i,
      high: 42.0,
      low: 42.0,
      open: 42.0,
      timestamp: Timex.now()
    }
  end

records
|> Enum.each(fn record ->
  Req.post!("http://localhost:4000/api/insert", json: record)
end)

%Req.Response{
  status: 200,
  body: %{"data" => %{"average" => 5.5}}
} = Req.get!("http://localhost:4000/api/average/?window=last_10_items")
```
